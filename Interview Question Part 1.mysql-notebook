{
    "type": "MySQLNotebook",
    "version": "1.0",
    "caption": "Result #1",
    "content": "CREATE DATABASE ORG;\nUSE ORG;\nSHOW TABLES;\n\nCREATE TABLE Worker (\n    Worker_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,\n    FIRST_NAME CHAR(25),\n    LAST_NAME CHAR (25),\n    SALARY INT (15),\n    JOINING_DATE DATETIME,\n    DEPARTMENT CHAR (25)\n);\n\nINSERT INTO Worker (Worker_ID, FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES\n(001, 'Monika', 'Arora', 100000, '14-02-20 09.00.00', 'HR'),\n(002, 'Niharika', 'Verma', 80000, '14-06-11 09.00.00', 'Admin'),\n(003, 'Vishal', 'Singhal', 300000, '14-02-20 09.00.00', 'HR'),\n(004, 'Amitabh', 'Singh', 500000, '14-02-20 09.00.00', 'Admin'),\n(005, 'Vivek', 'Bhati', 500000, '14-06-11 09.00.00', 'Admin'),\n(006, 'Vipul', 'Diwan', 200000, '14-06-11 09.00.00', 'Account'),\n(007, 'Satish', 'Kumar', 75000, '14-01-20 09.00.00','Account'),\n(008, 'Geetika', 'Chauhan', 90000, '14-04-11 09.00.00', 'Admin');\n\nSELECT * FROM Worker;\n\nCREATE TABLE Bonus(\n    Worker_ID INT,\n    BONUS_AMOUNT INT (10),\n    BONUS_DATE DATETIME,\n    FOREIGN KEY (Worker_ID) REFERENCES Worker(Worker_ID) ON DELETE CASCADE\n);\n\nINSERT INTO Bonus(Worker_ID, BONUS_AMOUNT, BONUS_DATE) VALUES\n(001, 5000, '16-02-20'),\n(002, 3000, '16-06-11'),\n(003, 4000, '16-02-20'),\n(001, 4500, '16-02-20'),\n(002, 3500, '16-06-11');\n\nSELECT * FROM Bonus;\n\nCREATE TABLE Title (\n    Worker_ID INT,\n    Worker_TITLE CHAR (25),\n    AFFECTED_FROM DATETIME, \n    FOREIGN KEY (Worker_ID) REFERENCES Worker(Worker_ID) ON DELETE CASCADE\n);\n\nINSERT INTO Title (Worker_ID, Worker_TITLE, AFFECTED_FROM) VALUES\n(001, 'Manager', '2016-02-20 00:00:00'),\n(002, 'Executive', '2016-06-11 00:00:00'),\n(008, 'Executive', '2016-06-11 00:00:00'),\n(005, 'Manager', '2016-06-11 00:00:00'),\n(004, 'ASst. Manager', '2016-06-11 00:00:00'),\n(007, 'Executive', '2016-06-11 00:00:00'),\n(006, 'Lead', '2016-06-11 00:00:00'),\n(003, 'Lead', '2016-06-11 00:00:00');\n\nSELECT * FROM Title;\n\n# Q-1. Write an SQL query to fetch “FIRST_NAME” FROM Worker table using the aliAS name AS <Worker_NAME>.\nSELECT FIRST_NAME AS Worker_NAME FROM Worker;\n\n# Q-2. Write an SQL query to fetch “FIRST_NAME” FROM Worker table in upper cASe.\nSELECT UPPER(FIRST_NAME) FROM Worker;\n\n# Q-3. Write an SQL query to fetch unique values of DEPARTMENT FROM Worker table.\nSELECT DISTINCT DEPARTMENT FROM Worker;\n\n# Q-4. Write an SQL query to print the first three characters of  FIRST_NAME FROM Worker table.\nSELECT substring(FIRST_NAME, 1, 3) FROM Worker;\n\n# Q-5. Write an SQL query to find the position of the alphabet (\"b\") in the first name column \"mitabh\"FROM Worker table.\nSELECT INSTR(FIRST_NAME, 'B') FROM Worker where FIRST_NAME = 'Amitabh';\n\n# Q-6. Write an SQL query to print the FIRST_NAME FROM Worker table after removing white spaces FROM the right side.\nSELECT RTRIM(FIRST_NAME) FROM Worker;\n\n# Q-7. Write an SQL query to print the DEPARTMENT FROM Worker table after removing white spaces FROM the left side.\nSELECT LTRIM(FIRST_NAME) FROM Worker;\n\n# Q-8. Write an SQL query that fetches the unique values of DEPARTMENT FROM Worker table and prints its length.\nSELECT DISTINCT department, LENGTH(department) FROM Worker;\n\n# Q-9. Write an SQL query to print the FIRST_NAME FROM Worker table after replacing \"a\" with \"\"\nSELECT REPLACE(FIRST_NAME, 'a', 'A')  FROM Worker;\n\n# Q-10. Write an SQL query to print the FIRST_NAME and LAST_NAME FROM Worker table into a single column COMPLETE_NAME.\n# A space char should separate them.\nSELECT CONCAT(FIRST_NAME, ' ', lASt_name) AS COMPLETE_NAME FROM Worker;\n\n# Q-11. Write an SQL query to print all Worker details FROM the Worker table ORDER BY FIRST_NAME AScending.\nSELECT * FROM Worker ORDER BY FIRST_NAME;\n\n# Q-12. Write an SQL query to print all Worker details FROM the Worker table ORDER BY \n# FIRST_NAME AScending and DEPARTMENT Descending.\nSELECT * FROM Worker ORDER BY FIRST_NAME ASC, department DESC;\n\n# Q-13. Write an SQL query to print details for Workers with the first name AS “Vipul” and “Satish” FROM Worker table.\nSELECT * FROM Worker where FIRST_NAME IN ('Vipul', 'Satish');\n\n# Q-14. Write an SQL query to print details of Workers excluding first names, “Vipul” and “Satish” FROM Worker table.\nSELECT * FROM Worker where FIRST_NAME NOT IN ('Vipul', 'Satish');\n\n# Q-15. Write an SQL query to print details of Workers with DEPARTMENT name as “Admin*”.\nSELECT * FROM Worker WHERE DEPARTMENT LIKE 'Admin%';\n\n# Q-16. Write an SQL query to print details of the Workers whose FIRST_NAME contains \"a\"\nSELECT * FROM Worker WHERE FIRST_NAME LIKE '%a%';\n\n# Q-17. Write an SQL query to print details of the Workers whose FIRST_NAME ends with \"a\".\nSELECT * FROM Worker WHERE FIRST_NAME LIKE '%a';\n\n# Q-18. Write an SQL query to print details of the Workers whose FIRST_NAME ends with \"h\" and contains six alphabets.\nSELECT * FROM Worker WHERE FIRST_NAME LIKE '%h' AND LENGTH(FIRST_NAME) = 6;\n# OR\nSELECT * FROM Worker WHERE FIRST_NAME LIKE '_____h';\n\n# Q-19. Write an SQL query to print details of the Workers whose SALARY lies between 100000 and 500000.\nSELECT * FROM Worker WHERE Salary BETWEEN 100000 AND 500000;\n\n# Q-20. Write an SQL query to print details of the Workers who have joined in Feb\"2014.\nSELECT * FROM Worker WHERE YEAR(JOINING_DATE) = 2014 AND MONTH(JOINING_DATE) = 2;\n\n# Q-21. Write an SQL query to fetch the count of employees working in the department ‘Admin’.\nSELECT COUNT(Worker_ID) FROM Worker WHERE Department = 'Admin';\n\n# Q-22. Write an SQL query to fetch worker full names with salaries >= 50000 and <= 100000.\nSELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM Worker WHERE Salary BETWEEN 50000 AND 100000;\n# OR \nSELECT CONCAT(FIRST_NAME, ' ', LAST_NAME) AS FULL_NAME FROM Worker WHERE Salary >= 50000 AND Salary <= 100000;\n\n# Q-23. Write an SQL query to fetch the no. of workers for each department in the descending order.\nSELECT COUNT(Worker_ID), Department FROM Worker GROUP BY Department ORDER BY COUNT(Worker_ID) DESC;\n\n# Q-24. Write an SQL query to print details of the Workers who are also Managers.\nSELECT W.* FROM Worker AS W INNER JOIN TITLE as T ON W.Worker_ID = T.Worker_ID WHERE T.Worker_TITLE = 'Manager';\n\n# Q-25. Write an SQL query to fetch number (more than 1) of same titles in the ORG of different types.\nSELECT WORKER_TITLE, COUNT(*) AS COUNT FROM TITLE GROUP BY WORKER_TITLE HAVING COUNT(*) > 1;\n\n# Q-26. Write an SQL query to show only odd rows from a table.\nSELECT * FROM Worker WHERE MOD(WORKER_ID, 2) != 0;\n\n# Q-27. Write an SQL query to show only even rows from a table. \nSELECT * FROM Worker WHERE MOD(WORKER_ID, 2) = 0;\n\n# Q-28. Write an SQL query to clone a new table from another table.\nCREATE TABLE Worker_Clone LIKE Worker;\nDESC Worker_Clone;\n            # Coping Data\nINSERT INTO Worker_Clone SELECT * FROM Worker;\nSELECT * FROM Worker_Clone;\n\n# Q-29. Write an SQL query to fetch intersecting records of two tables. --> Intersection\nSELECT Worker.* FROM Worker INNER JOIN Worker_Clone USING(Worker_id);\n\n# Q-30. Write an SQL query to show records from one table that another table does not have. --> Minus\nSELECT * FROM Worker LEFT JOIN Worker_Clone USING(Worker_id) WHERE Worker_Clone.Worker_id IS NULL;\n\n# Q-31. Write an SQL query to show the current date and time.\nSELECT CURRENT_DATE();\nSELECT NOW();\n\n# Q-32. Write an SQL query to show the top n (say 5) records of a table order by descending salary.\nUSE ORG;\nSELECT * FROM Worker ORDER BY Salary DESC LIMIT 5;\n\n# Q-33. Write an SQL query to determine the nth (say n=5) highest salary from a table.\nSELECT * FROM Worker ORDER BY Salary DESC LIMIT 4, 1; # 4 chhod kar 1 row dede n - 1, 1 --> n = 5\n\n# Q-34. Write an SQL query to determine the 5th highest salary without using LIMIT keyword.\nSELECT * FROM Worker AS W1 WHERE 5 = (\n    SELECT COUNT(W2.Salary) FROM Worker AS W2 WHERE W1.Salary <= W2.Salary\n);\n\n# Q-35. Write an SQL query to fetch the list of employees with the same salary.\nSELECT * FROM Worker AS W1, Worker AS W2 WHERE W1.Salary = W2.Salary AND W1.WORKER_ID != W2.WORKER_ID;  \n\n# Q-36. Write an SQL query to show the second highest salary from a table using sub-query.\nSELECT MAX(Salary) FROM Worker WHERE Salary NOT IN(\n    SELECT MAX(Salary) FROM Worker\n);\n# OR\nSELECT DISTINCT Salary FROM Worker ORDER BY Salary DESC LIMIT 1, 1;\n\n# Q-37. Write an SQL query to show one row twice in results from a table.\nSELECT * FROM Worker UNION ALL SELECT * FROM Worker ORDER BY WORKER_ID;\n\n# Q-38. Write an SQL query to list worker_id who does not get bonus.\nSELECT * FROM Worker AS W WHERE W.WORKER_ID NOT IN (SELECT WORKER_ID FROM BONUS AS B);\n\n# Q-39. Write an SQL query to fetch the first 50% records from a table.\nSELECT * FROM Worker WHERE WORKER_ID <= (SELECT COUNT(*) / 2 FROM Worker);\n\n# Q-40. Write an SQL query to fetch the departments that have less than 4 people in it.\nSELECT Department, COUNT(*) FROM WORKER GROUP BY Department HAVING COUNT(*) < 4;\n\n# Q-41. Write an SQL query to show all departments along with the number of people in there.\nSELECT Department, COUNT(*) FROM WORKER GROUP BY Department;\n\n# Q-42. Write an SQL query to show the last record from a table.\nSELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 1;\n# OR\nSELECT * FROM Worker WHERE WORKER_ID = (SELECT MAX(WORKER_ID) FROM Worker);\n\n# Q-43. Write an SQL query to fetch the first row of a table.\nSELECT * FROM Worker ORDER BY WORKER_ID ASC LIMIT 1;\n# OR\nSELECT * FROM Worker WHERE WORKER_ID = (SELECT MIN(WORKER_ID) FROM Worker);\n\n# Q-44. Write an SQL query to fetch the last five records from a table.\n(SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 5) ORDER BY WORKER_ID;\n\n# Q-45. Write an SQL query to print the name of employees having the highest salary in each department.\nSELECT MAX(Salary) AS MAX_SALARY, Department FROM Worker GROUP BY Department;\n# OR\nselect w.department, w.first_name, w.salary from\n(select max(salary) as maxsal, department from worker group by department) temp\ninner join worker w on temp.department = w.department and temp.maxsal = w.salary;\n\n# Q-46. Write an SQL query to fetch three max salaries from a table using co-related subquery\nSELECT DISTINCT Salary from Worker w1\nWHERE 3 >= (SELECT count(DISTINCT salary) FROM worker w2 WHERE w1.salary <= w2.salary) ORDER BY w1.salary DESC;\n# DRY RUN AFTER REVISING THE CORELATED SUBQUERY CONCEPT FROM LEC-9.\nSELECT distinct salary from worker order by salary desc limit 3;\n\n# Q-47. Write an SQL query to fetch three min salaries from a table using co-related subquery\nSELECT w.department, w.first_name, w.salary FROM\n(SELECT MIN(salary) as minsal, department FROM worker GROUP BY department) temp\nINNER JOIN worker w on temp.department = w.department AND temp.minsal = w.salary;\n# OR\nSELECT DISTINCT salary FROM Worker ORDER BY salary DESC LIMIT 3;\n\n# Q-48. Write an SQL query to fetch nth max salaries from a table.\nSELECT DISTINCT Salary from Worker w1\nWHERE n >= (SELECT count(DISTINCT salary) FROM worker w2 WHERE w1.salary <= w2.salary) ORDER BY w1.salary DESC;\n\n# Q-49. Write an SQL query to fetch departments along with the total salaries paid for each of them.\nSELECT SUM(Salary) AS DepartmentTotalSalary,Department FROM Worker GROUP BY Department ORDER BY DepartmentTotalSalary;\n\n# Q-50. Write an SQL query to fetch the names of workers who earn the highest salary.\nSELECT FIRST_NAME, salary from worker where salary = (select max(Salary) from worker);",
    "options": {
        "tabSize": 4,
        "indentSize": 4,
        "insertSpaces": true,
        "defaultEOL": "LF",
        "trimAutoWhitespace": true
    },
    "viewState": {
        "cursorState": [
            {
                "inSelectionMode": false,
                "selectionStart": {
                    "lineNumber": 243,
                    "column": 87
                },
                "position": {
                    "lineNumber": 243,
                    "column": 87
                }
            }
        ],
        "viewState": {
            "scrollLeft": 0,
            "firstPosition": {
                "lineNumber": 234,
                "column": 1
            },
            "firstPositionDeltaTop": -16
        },
        "contributionsState": {
            "editor.contrib.folding": {},
            "editor.contrib.wordHighlighter": false
        }
    },
    "contexts": [
        {
            "state": {
                "start": 1,
                "end": 243,
                "language": "mysql",
                "result": {
                    "type": "resultIds",
                    "list": [
                        "20699f98-b003-4b5b-85ee-81d2cb3c1701"
                    ]
                },
                "currentHeight": 351.984375,
                "currentSet": 1,
                "statements": [
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 0,
                            "length": 20
                        },
                        "contentStart": 0,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 20,
                            "length": 9
                        },
                        "contentStart": 21,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 29,
                            "length": 13
                        },
                        "contentStart": 30,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 42,
                            "length": 204
                        },
                        "contentStart": 44,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 246,
                            "length": 608
                        },
                        "contentStart": 248,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 854,
                            "length": 23
                        },
                        "contentStart": 856,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 877,
                            "length": 170
                        },
                        "contentStart": 879,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 1047,
                            "length": 188
                        },
                        "contentStart": 1049,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 1235,
                            "length": 22
                        },
                        "contentStart": 1237,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 1257,
                            "length": 176
                        },
                        "contentStart": 1259,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 1433,
                            "length": 401
                        },
                        "contentStart": 1435,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 1834,
                            "length": 22
                        },
                        "contentStart": 1836,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 1856,
                            "length": 152
                        },
                        "contentStart": 1963,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2008,
                            "length": 120
                        },
                        "contentStart": 2091,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2128,
                            "length": 123
                        },
                        "contentStart": 2212,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2251,
                            "length": 145
                        },
                        "contentStart": 2349,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2396,
                            "length": 194
                        },
                        "contentStart": 2519,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2590,
                            "length": 156
                        },
                        "contentStart": 2709,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2746,
                            "length": 155
                        },
                        "contentStart": 2864,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 2901,
                            "length": 173
                        },
                        "contentStart": 3015,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 3074,
                            "length": 148
                        },
                        "contentStart": 3172,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 3222,
                            "length": 229
                        },
                        "contentStart": 3380,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 3451,
                            "length": 151
                        },
                        "contentStart": 3561,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 3602,
                            "length": 201
                        },
                        "contentStart": 3741,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 3803,
                            "length": 182
                        },
                        "contentStart": 3924,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 3985,
                            "length": 185
                        },
                        "contentStart": 4105,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 4170,
                            "length": 143
                        },
                        "contentStart": 4261,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 4313,
                            "length": 140
                        },
                        "contentStart": 4404,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 4453,
                            "length": 141
                        },
                        "contentStart": 4546,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 4594,
                            "length": 195
                        },
                        "contentStart": 4714,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 4789,
                            "length": 58
                        },
                        "contentStart": 4795,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 4847,
                            "length": 166
                        },
                        "contentStart": 4953,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 5013,
                            "length": 171
                        },
                        "contentStart": 5103,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 5184,
                            "length": 159
                        },
                        "contentStart": 5280,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 5343,
                            "length": 199
                        },
                        "contentStart": 5437,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 5542,
                            "length": 117
                        },
                        "contentStart": 5549,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 5659,
                            "length": 201
                        },
                        "contentStart": 5761,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 5860,
                            "length": 196
                        },
                        "contentStart": 5944,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6056,
                            "length": 197
                        },
                        "contentStart": 6161,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6253,
                            "length": 115
                        },
                        "contentStart": 6318,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6368,
                            "length": 116
                        },
                        "contentStart": 6435,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6484,
                            "length": 108
                        },
                        "contentStart": 6554,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6592,
                            "length": 19
                        },
                        "contentStart": 6594,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6611,
                            "length": 73
                        },
                        "contentStart": 6638,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6684,
                            "length": 28
                        },
                        "contentStart": 6685,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6712,
                            "length": 160
                        },
                        "contentStart": 6803,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 6872,
                            "length": 202
                        },
                        "contentStart": 6976,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7074,
                            "length": 86
                        },
                        "contentStart": 7138,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7160,
                            "length": 14
                        },
                        "contentStart": 7161,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7174,
                            "length": 110
                        },
                        "contentStart": 7276,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7284,
                            "length": 51
                        },
                        "contentStart": 7285,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7335,
                            "length": 142
                        },
                        "contentStart": 7424,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7477,
                            "length": 254
                        },
                        "contentStart": 7615,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7731,
                            "length": 184
                        },
                        "contentStart": 7813,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 7915,
                            "length": 184
                        },
                        "contentStart": 8010,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8099,
                            "length": 73
                        },
                        "contentStart": 8105,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8172,
                            "length": 147
                        },
                        "contentStart": 8248,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8319,
                            "length": 157
                        },
                        "contentStart": 8390,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8476,
                            "length": 148
                        },
                        "contentStart": 8550,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8624,
                            "length": 170
                        },
                        "contentStart": 8714,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8794,
                            "length": 155
                        },
                        "contentStart": 8889,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 8949,
                            "length": 120
                        },
                        "contentStart": 9016,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9069,
                            "length": 81
                        },
                        "contentStart": 9075,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9150,
                            "length": 116
                        },
                        "contentStart": 9214,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9266,
                            "length": 81
                        },
                        "contentStart": 9272,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9347,
                            "length": 148
                        },
                        "contentStart": 9421,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9495,
                            "length": 183
                        },
                        "contentStart": 9601,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9678,
                            "length": 216
                        },
                        "contentStart": 9684,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 9894,
                            "length": 245
                        },
                        "contentStart": 9990,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 10139,
                            "length": 133
                        },
                        "contentStart": 10208,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 10272,
                            "length": 306
                        },
                        "contentStart": 10368,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 10578,
                            "length": 70
                        },
                        "contentStart": 10584,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 10648,
                            "length": 218
                        },
                        "contentStart": 10717,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 10866,
                            "length": 221
                        },
                        "contentStart": 10969,
                        "state": 0
                    },
                    {
                        "delimiter": ";",
                        "span": {
                            "start": 11087,
                            "length": 174
                        },
                        "contentStart": 11175,
                        "state": 0
                    }
                ]
            },
            "data": [
                {
                    "tabId": "447871ba-b583-4add-da8f-8642573ce937",
                    "resultId": "20699f98-b003-4b5b-85ee-81d2cb3c1701",
                    "rows": [
                        {
                            "0": "HR",
                            "1": "Vishal",
                            "2": 300000
                        },
                        {
                            "0": "Admin",
                            "1": "Amitabh",
                            "2": 500000
                        },
                        {
                            "0": "Admin",
                            "1": "Vivek",
                            "2": 500000
                        },
                        {
                            "0": "Account",
                            "1": "Vipul",
                            "2": 200000
                        }
                    ],
                    "columns": [
                        {
                            "title": "department",
                            "field": "0",
                            "dataType": {
                                "type": 17,
                                "characterMaximumLength": 65535,
                                "flags": [
                                    "BINARY",
                                    "ASCII",
                                    "UNICODE"
                                ],
                                "needsQuotes": true,
                                "parameterFormatType": "OneOrZero"
                            },
                            "inPK": false,
                            "nullable": false,
                            "autoIncrement": false
                        },
                        {
                            "title": "first_name",
                            "field": "1",
                            "dataType": {
                                "type": 17,
                                "characterMaximumLength": 65535,
                                "flags": [
                                    "BINARY",
                                    "ASCII",
                                    "UNICODE"
                                ],
                                "needsQuotes": true,
                                "parameterFormatType": "OneOrZero"
                            },
                            "inPK": false,
                            "nullable": false,
                            "autoIncrement": false
                        },
                        {
                            "title": "salary",
                            "field": "2",
                            "dataType": {
                                "type": 4,
                                "flags": [
                                    "SIGNED",
                                    "ZEROFILL"
                                ],
                                "numericPrecision": 10,
                                "parameterFormatType": "OneOrZero",
                                "synonyms": [
                                    "INTEGER",
                                    "INT4"
                                ]
                            },
                            "inPK": false,
                            "nullable": false,
                            "autoIncrement": false
                        }
                    ],
                    "executionInfo": {
                        "text": "OK, 4 records retrieved in 1.284ms"
                    },
                    "totalRowCount": 4,
                    "hasMoreRows": false,
                    "currentPage": 0,
                    "index": 0,
                    "sql": "\n\n# Q-46. Write an SQL query to fetch three max salaries from a table using co-related subquery\n# DRY RUN AFTER REVISING THE CORELATED SUBQUERY CONCEPT FROM LEC-9.\nSELECT DISTINCT(w.department), w.first_name, w.salary FROM\n(SELECT MAX(salary) as maxsal, department FROM worker GROUP BY department) temp\nINNER JOIN worker w on temp.department = w.department AND temp.maxsal = w.salary;",
                    "updatable": false,
                    "fullTableName": ""
                }
            ]
        }
    ]
}